openapi: 3.0.2
info:
  title: Norton
  version: 1.0.0
servers:
- url: /api/v1
paths:
  /channels:
    description: The REST endpoint/path used to list and create zero or more Channel
      entities.  This path contains a GET and POST operation to perform the list and
      create tasks, respectively.
    get:
      description: Gets a list of all Channel entities.
      operationId: get_channels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: Successful response - returns an array of Channel entities.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to retrieve channels
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to retrieve channels
      security:
      - LoginRequired: []
      summary: List All channels
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    post:
      description: Creates a new instance of a Channel.
      operationId: create_channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        description: A new Channel to be created.
        required: true
      responses:
        "201":
          description: Successful response.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to create a new channel
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to create a new channel
      security:
      - LoginRequired: []
      summary: Create a Channel
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    summary: Path used to manage the list of channels.
  /channels/{channelId}:
    delete:
      description: Deletes an existing Channel.
      operationId: delete_channel
      parameters:
      - description: A unique identifier for a Channel.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Successful response.
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Delete a Channel
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    description: The REST endpoint/path used to get, update, and delete single instances
      of an Channel.  This path contains GET, PUT, and DELETE operations used to perform
      the get, update, and delete tasks, respectively.
    get:
      description: Gets the details of a single instance of a Channel.
      operationId: get_channel
      parameters:
      - description: A unique identifier for a Channel.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Successful response - returns a single Channel.
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Get a Channel
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    put:
      description: Updates an existing Channel.
      operationId: update_channel
      parameters:
      - description: A unique identifier for a Channel.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        description: Updated Channel information.
        required: true
      responses:
        "204":
          description: Channel has been updated.
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Update a Channel
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    summary: Path used to manage a single Channel.
  /channels/{channelId}/members:
    get:
      description: Gets a list of all Users in a given Channel.
      operationId: get_channel_members
      parameters:
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                SampleUsers:
                  value:
                  - id: 1
                    username: David
                  - id: 2
                    username: Morgan
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Returns a list of Users for the specified Channel
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: List All members
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    post:
      operationId: add_user_to_channel
      parameters:
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: User has added to channel members
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    summary: Path used to manage the all Users in a Channel
  /channels/{channelId}/members/{userId}:
    delete:
      description: Removes a User for a Channel
      operationId: remove_channel_member
      parameters:
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Remove as User
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    summary: Path used to manage the indidual Users in a Channel
  /channels/{channelId}/messages:
    description: The REST endpoint/path used to list and create zero or more Message
      entities.  This path contains a GET and POST operation to perform the list and
      create tasks, respectively.
    get:
      description: Gets a list of all Message entities.
      operationId: get_messages
      parameters:
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Message'
                type: array
          description: Successful response - returns an array of Message entities.
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: List All messages
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    post:
      description: Creates a new instance of a Message.
      operationId: create_message
      parameters:
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        description: A new Message to be created.
        required: true
      responses:
        "201":
          description: Successful response.
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not locate Channel
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Create a Message
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    summary: Path used to manage the list of messages.
  /channels/{channelId}/messages/{messageId}:
    delete:
      description: Deletes an existing Message.
      operationId: delete_message
      parameters:
      - description: A unique identifier for a Message.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: messageId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Successful response.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Delete a Message
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    description: The REST endpoint/path used to get, update, and delete single instances
      of an Message.  This path contains GET, PUT, and DELETE operations used to perform
      the get, update, and delete tasks, respectively.
    get:
      description: Gets the details of a single instance of a Message.
      operationId: get_message
      parameters:
      - description: A unique identifier for a Message.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: messageId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Successful response - returns a single Message.
        "404":
          content:
            application/json:
              examples:
                ChannelNotFound:
                  value:
                    code: 404
                    messages: Channel not found
                MessageNotFound:
                  value:
                    code: 404
                    messages: Message not found
              schema:
                $ref: '#/components/schemas/Error'
          description: Eith the Channel or Message could not be found.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Get a Message
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    put:
      description: Updates an existing Message.
      operationId: update_message
      parameters:
      - description: A unique identifier for a Message.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: messageId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        description: Updated Message information.
        required: true
      responses:
        "202":
          description: Successful response.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Update a Message
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
    summary: Path used to manage a single Message.
  /login:
    post:
      description: Attempts to log a user in
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
      responses:
        "204":
          description: Login sucessful
          headers:
            Set-Cookie:
              description: Returns a new session_id to be used for all future requests
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              examples:
                LoginFailed:
                  value:
                    code: 403
                    messages: Invalid Name and/or password
              schema:
                $ref: '#/components/schemas/Error'
          description: Login Unsucessful
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - {}
      summary: Log in
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
    summary: Path used to login a User
  /register:
    post:
      description: Attempts to register a new user
      operationId: register
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
      responses:
        "204":
          description: Successfuly registered a new User
        "400":
          content:
            application/json:
              examples:
                InvalidNameOrPassword:
                  value:
                    code: 400
                    messages: Password insufficiently complex
                NameTooShort:
                  value:
                    code: 400
                    messages: Name too short
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem with username or password
        "409":
          content:
            application/json:
              examples:
                NameTaken:
                  value:
                    code: 409
                    messages: NameTaken
              schema:
                $ref: '#/components/schemas/Error'
          description: Name is taken
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - {}
      summary: Registers User
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
    summary: Path used to register a new User
  /users:
    description: The REST endpoint/path used to list and create zero or more User
      entities.  This path contains a GET and POST operation to perform the list and
      create tasks, respectively.
    get:
      description: Gets a list of all User entities.
      operationId: get_users
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Successful response - returns an array of User entities.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: List All users
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      description: Creates a new instance of a User.
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: A new User to be created.
        required: true
      responses:
        "201":
          description: Successful response.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - {}
      summary: Create a User
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    summary: Path used to manage the list of users.
  /users/{userId}:
    delete:
      description: Deletes an existing User.
      operationId: delete_user
      parameters:
      - description: A unique identifier for a User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Successful response.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      summary: Delete a User
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    description: The REST endpoint/path used to get, update, and delete single instances
      of an User.  This path contains GET, PUT, and DELETE operations used to perform
      the get, update, and delete tasks, respectively.
    get:
      description: Gets the details of a single instance of a User.
      operationId: get_user
      parameters:
      - description: A unique identifier for a User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful response - returns a single User.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      security:
      - LoginRequired: []
      summary: Get a User
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    put:
      description: Updates an existing User.
      operationId: update_user
      parameters:
      - description: A unique identifier for a User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated User information.
        required: true
      responses:
        "202":
          description: Successful response.
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to process request
      summary: Update a User
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    summary: Path used to manage a single User.
components:
  requestBodies:
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  responses:
    ChannelNotFound:
      content:
        application/json:
          examples:
            ChannelNotFound:
              value:
                code: 404
                messages: Channel not found
          schema:
            $ref: '#/components/schemas/Error'
      description: Could not locate Channel
    InternalServerIssue:
      content:
        application/json:
          examples:
            ChannelNotFound:
              value:
                code: 500
                messages: Unable to process request
          schema:
            $ref: '#/components/schemas/Error'
      description: Unable to create user
  schemas:
    Channel:
      example:
        name: name
        id: 0
        type: TEXT
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          enum:
          - TEXT
          - VOICE
          type: string
      required:
      - name
      - type
      type: object
    User:
      example:
        id: 0
        name: Bob
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    Message:
      example:
        author: 102
        channel: 110
        id: 101
        content: What time is the meeting
        timestamp: 6
      properties:
        id:
          type: integer
        channel:
          type: integer
        author:
          type: integer
        content:
          type: string
        timestamp:
          type: integer
      required:
      - author
      - content
      type: object
    Error:
      properties:
        code:
          type: integer
        messages:
          type: string
      required:
      - code
      - messages
      type: object
    inline_object:
      properties:
        username:
          type: string
        password:
          type: string
      type: object
  securitySchemes:
    LoginRequired:
      in: cookie
      name: session_id
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_LoginRequired
